---@meta

---------------------------------------------------------------
--- Configuration table
---------------------------------------------------------------
---
---@class request post request configuration
---@field url string the request url
---@field body string the post body

---HTTP client using curl
---Sends an HTTP GET or post request to the specified URL.
---
---Example usage:
---```lua
---
---```
---If `on_exit` is `nil`, the method will not wait for the job to
---complete before returning; instead, it will return immediately with
---an exit status indicating the job's completion.
---
---When on_stdout and on_stderr are not set the responses will be collected
---and can then be accessed with Http:response()
---
---Implementations:
---[NvimHttp type](lua://NvimHttp) using the nvim uv package
---[LuvHttp type](lua://LuvHttp) using the luv package
---@class Http
---@field new fun() create a new HTTP object.
---@field get fun(self, url: string,
---         on_exit: fun(job_id: integer, exit_code: integer)|nil,
---         on_stdout: fun(chan-id: integer, data: table, name: string)|nil,
---         on_stderr: fun(chan-id: integer, data: table, name: string)|nil)
---@field post fun(self, request: table,
---         on_exit: fun(job_id: integer, exit_code: integer),
---         on_stdout: fun(chan-id: integer, data: table, name: string)|nil,
---         on_stderr: fun(chan-id: integer, data: table, name: string)|nil)
---@field cancel function()
